{"version":3,"file":"static/js/154.4bf00594.chunk.js","mappings":"oOAGaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kHAQhBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uHAQhBG,EAASL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gLASnBK,GAAYP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,gLAWxBQ,EAAQV,EAAAA,GAAAA,EAAQW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,6E,SCP7B,EA5BoB,SAAJU,GAAkB,IAAZC,EAAKD,EAALC,MACdC,GAAWC,EAAAA,EAAAA,MAKjB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACjB,EAAI,CAAAmB,SACFL,EAAMM,KAAI,SAAAC,GACT,OACEJ,EAAAA,EAAAA,KAACb,EAAI,CAAAe,UACHG,EAAAA,EAAAA,MAACd,EAAS,CAACe,GAAE,WAAAC,OAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAMZ,GAAWI,SAAA,EAC/DF,EAAAA,EAAAA,KAACX,EAAM,CAACsB,IARA,kCAQkBP,EAAMQ,YAC3BC,MAAO,IACPC,IAAKV,EAAMW,kBACXf,EAAAA,EAAAA,KAACN,EAAK,CAAAQ,SACHE,EAAMW,qBANNX,EAAMI,GAWrB,OAIR,C","sources":["components/MovieCard/MovieCard.sryled.js","components/MovieCard/MovieCard.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 25px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 350px;\n  text-align: center;\n`;\n\nexport const Poster = styled.img`\n  margin-left: auto;\n  margin-right: auto;\n  max-height: 100%;\n  margin-bottom: 20px;\n  border-radius: 10px;\n  box-shadow: 1px 1px 5px 1px rgba(0, 0, 0, 0.24);\n`;\n\nexport const MovieLink = styled(Link)`\n  padding: 10px;\n  color:  #191970;\n  transition: color 250ms ease-in-out;\n  text-shadow: 0 1px 0 rgba(19, 74, 70, 0.4);\n\n  &:hover {\n    color: #FFFFFF;\n  }\n`;\n\nexport const Title = styled.p`\n  font-size: 24px;\n  font-weight: 500;\n  letter-spacing: 0em;\n\n`;","\nimport { useLocation } from 'react-router-dom';\nimport {List, Item, Poster, MovieLink, Title} from './MovieCard.sryled';\n\n const MovieCard  = ({films}) => {\n  const location = useLocation();\n    // if(!films){\n    //   return null;\n    // }\n    const imgBaseUrl = 'https://image.tmdb.org/t/p/w300';\n  return (\n    <>\n      <List>\n        {films.map(movie => {\n          return (\n            <Item key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }} \n              ><Poster src={imgBaseUrl + movie.poster_path}\n                    width={140}\n                    alt={movie.original_title} />\n                    <Title>\n                      {movie.original_title}\n                    </Title>\n              </MovieLink>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default MovieCard;"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Poster","_templateObject3","MovieLink","Link","_templateObject4","Title","_templateObject5","_ref","films","location","useLocation","_jsx","_Fragment","children","map","movie","_jsxs","to","concat","id","state","from","src","poster_path","width","alt","original_title"],"sourceRoot":""}